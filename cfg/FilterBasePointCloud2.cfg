#! /usr/bin/env python

PACKAGE = 'point_cloud2_filters'
import roslib
roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator ()
# def add (self, name, paramtype, level, description, default = None, min = None, max = None, edit_method = ""):
gen.add ("active", bool_t, 0, "Activate or not the filter.", True)
gen.add ("input_frame", str_t, 0, "The input TF frame the data should be transformed into before processing, if input.header.frame_id is different.", "")
gen.add ("output_frame", str_t, 0, "The output TF frame the data should be transformed into after processing, if input.header.frame_id is different.", "")
gen.add ("pub_cloud", bool_t, 0, "Publish the cloud immediately after this filter (note: this will be a duplicate if this is the last filter of the chain", False)

exit (gen.generate (PACKAGE, "point_cloud2_filters", "FilterBasePointCloud2"))

